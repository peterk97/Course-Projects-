<?import javafx.geometry.Insets?>
<?import javafx.scene.layout.GridPane?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.layout.ColumnConstraints?>
<GridPane fx:controller="sample.Controller"
          xmlns:fx="http://javafx.com/fxml" alignment="center" hgap="10" vgap="10"
          gridLinesVisible="true">
<!--ColumnConstrains are properties and they can set the columns one by one how many space they can occupied in the window it can be pixel or %-->
<!--           <columnConstraints>-->
<!--           <ColumnConstraints percentWidth="50"/>-->
<!--                 <ColumnConstraints percentWidth="50"/>-->
<!--           </columnConstraints>-->
<!-- We are going to use the text property within the button-->
<!--We can specify the row and the column for each button-->
<!--Without specifying it will add theme to a default pos which is row 0, coll 0-->
    <Button text="Button One" GridPane.rowIndex="0" GridPane.columnIndex="0"/>
    <Button text="Button Two" GridPane.rowIndex="0" GridPane.columnIndex="1"/>
    <Button text="Button Three" GridPane.rowIndex="1" GridPane.columnIndex="0"/>
    <Button text="Really Long Button Four" GridPane.rowIndex="1" GridPane.columnIndex="1"/>
    <Button text="Button Five" GridPane.rowIndex="2" GridPane.columnIndex="0"/>


</GridPane>